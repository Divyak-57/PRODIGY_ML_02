# K-Means Clustering to Group Retail Customers Based on Purchase History

# Step 1: Import Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# Step 2: Create a Sample Dataset (or load from CSV if you have one)
# Columns: Annual Income, Spending Score
data = {
    'CustomerID': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    'Annual_Income': [15, 16, 17, 18, 19, 90, 92, 95, 98, 100],
    'Spending_Score': [39, 81, 6, 77, 40, 76, 94, 3, 72, 99]
}
df = pd.DataFrame(data)

# Step 3: Preprocess Data
X = df[['Annual_Income', 'Spending_Score']]
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Step 4: Determine Optimal Clusters Using Elbow Method
wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
    kmeans.fit(X_scaled)
    wcss.append(kmeans.inertia_)

plt.plot(range(1, 11), wcss, marker='o')
plt.title('Elbow Method for Optimal k')
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')
plt.grid(True)
plt.show()

# Step 5: Fit KMeans with Optimal k (e.g., 3)
kmeans = KMeans(n_clusters=3, init='k-means++', random_state=42)
df['Cluster'] = kmeans.fit_predict(X_scaled)

# Step 6: Visualize Clusters
plt.figure(figsize=(8, 6))
sns.scatterplot(data=df, x='Annual_Income', y='Spending_Score', hue='Cluster', palette='Set1', s=100)
plt.title('Customer Segments based on Purchase History')
plt.xlabel('Annual Income (in $1000s)')
plt.ylabel('Spending Score (1â€“100)')
plt.grid(True)
plt.legend(title='Cluster')
plt.show()
